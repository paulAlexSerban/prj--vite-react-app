# Simple workflow for deploying static content to GitHub Pages
name: 'Deploy static content to AWS S3 Test'

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ['release']

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow one concurrent deployment
concurrency:
    group: 'aws-s3'
    cancel-in-progress: true

env:
    NODE_VERSION: 18.17.1
    VITE_BASENAME: ${{ secrets.VITE_BASENAME }}

jobs:
    build:
        name: 'Build'
        environment:
            name: production
        runs-on: ubuntu-latest
        steps:
            - name: 'üì• checkout repository'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: 'üîß  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: 'üîß Install dependencies'
              run: yarn install

            - name: 'üèóÔ∏è Build'
              run: yarn run build:prod

            - name: 'üì¶ Upload artifact'
              uses: actions/upload-artifact@v3
              with:
                  name: dist-${{ github.sha }}
                  path: dist

    deployTest:
        name: 'Deploy Test - AWS S3'
        environment:
            name: production
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            # - name: "üì¶ Download artifact"
            #   uses: actions/download-artifact@v2
            #   with:
            #       name: dist-${{ github.sha }}
            
            - name: "üîß Setup AWS credentials"
              run: echo 'No AWS S3 Scripts yet'
              # uses: aws-actions/configure-aws-credentials@v1
              # with:
              #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              #     aws-region: ${{ secrets.AWS_REGION }}
