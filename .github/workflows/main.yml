# Simple workflow for deploying static content to GitHub Pages
name: 'Deploy static content to Pages'

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ['main']

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow one concurrent deployment
concurrency:
    group: 'pages'
    cancel-in-progress: true

env:
    NODE_VERSION: 18.17.1
    VITE_BASENAME: ${{ secrets.VITE_BASENAME }}

jobs:
    lint:
        name: 'Lint'
        environment:
            name: production
        runs-on: ubuntu-latest

        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: '🔧  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: '🔧 Install dependencies'
              run: yarn install

            - name: '🏗️ Build'
              run: yarn run lint

    unitTest:
        name: 'Unit Test'
        environment:
            name: production
        runs-on: ubuntu-latest

        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: '🔧  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: '🔧 Install dependencies'
              run: yarn install

            - name: '🏗️ Build'
              run: yarn run test:unit

    integrationTest:
        name: 'Integration Test'
        environment:
            name: production
        runs-on: ubuntu-latest
        needs: [lint, test]

        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: '🔧  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: '🔧 Install dependencies'
              run: yarn install

            - name: '🏗️ Build'
              run: yarn run test:integration

    build:
        name: 'Build'
        environment:
            name: production
        runs-on: ubuntu-latest
        needs: [lint, test, integrationTest]
        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: '🔧  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: '🔧 Install dependencies'
              run: yarn install

            - name: '🏗️ Build'
              run: yarn run build:prod

            - name: '📦 Upload artifact'
              uses: actions/upload-artifact@v3
              with:
                  name: dist-${{ github.sha }}
                  path: dist

    deployPreview:
        name: 'Deploy Preview - GitHub Pages'
        environment:
            name: production
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - name: "📦 Download artifact"
              uses: actions/download-artifact@v2
              with:
                  name: dist-${{ github.sha }}

            - name: '🔧 Setup Pages'
              uses: actions/configure-pages@v3

            - name: '📦 Upload artifact'
              uses: actions/upload-pages-artifact@v2
              with:
                  # Upload entire repository
                  path: '.'

            - name: '🚀 Deploy to GitHub Pages'
              id: deployment
              uses: actions/deploy-pages@v2

    deployTest:
        name: 'Deploy Test - AWS S3'
        environment:
            name: production
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            # - name: "📦 Download artifact"
            #   uses: actions/download-artifact@v2
            #   with:
            #       name: dist-${{ github.sha }}
            
            - name: "🔧 Setup AWS credentials"
              run: echo 'No AWS S3 Scripts yet'
              # uses: aws-actions/configure-aws-credentials@v1
              # with:
              #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              #     aws-region: ${{ secrets.AWS_REGION }}
